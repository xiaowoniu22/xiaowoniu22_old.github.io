---
layout: post
title:  "编写高质量代码读书笔记"
date:   2016-07-18 14:08:07 +0800
categories: jekyll update
tags: [读书笔记]
---
改善javascript程序的188个建议：

1、警惕Unicode乱码
考虑到代码的安全性，我们应该尽量使用基本字符进行编码
2、正确辨析js语法中的词、句和段
3、减少全局变量污染
因为全局变量可以可以在程序的任何地方被修改，所以使用全局变量降低了程序的安全性
减少全局变量的方法
（1）在应用程序中创建唯一一个全局变量，并定义该变量为当前应用的容器（减少冲突）
（2）闭包
4、注意js数据类型的特殊性
（1）防止浮点数溢出：二进制的浮点数不能正确处理十进制的小数，处理时先化成整数再转化成小数
（2）慎用js类型自动转换
（3）正确检测数据类型
（4）避免误用parseInt
5、防止js自动插入分号
6、正确处理js特殊值
（1）正确使用NaN和Infinity
（2）正确使用null和undefined
（3）使用假值
7、小心保留字的误用
8、谨慎使用运算符
（1）用===，不用==
（2）谨慎使用++和--
（3）小心都好运算符
（4）警惕运算符的副作用
{% highlight ruby %}
    var a = 1；
    a = (a++)+(++a)-(a++)-(++a);
    alert(a);
{% endhighlight %}
9、不要信任hasOwnProperty
10、谨记对象非空特性
11、慎重使用伪数组
12、避免使用with
13、养成优化表达式的思维方式
（1）加小括号
（2）改变表达式结构顺序
（3）避免布尔表达式的叠加
但是有时可以使用!!来做强制类型转换，将后面的表达式强制转换为布尔类型的数据（boolean）
（4）if语句分解较复杂的三目运算
14、不要滥用eval
15、避免使用continue
16、防止switch贯穿
17、块标志并非多余
18、比较function语句和function表达式
（1）function语句在解析时会被提升，这放宽了函数必须先声明后使用的要求
（2）最好不要在if语句中使用function语句
19、不要使用类型构造器
不要使用new Boolean,new Number
20、不要使用new
因为忘记写的话会导致构造函数的this指向window，所以不用，Are you kidding?
21、推荐提高循环性能的策略


第七章 数据交互与存储
137、使用隐藏框架实现异步通信


第八章 js引擎与兼容性
158、比较主流浏览器内核解析  
159、推荐根据浏览器特性进行检测  
160、关注各种引擎对ES3的分歧
161、关注各种引擎对ES3的补充
162、关注各种引擎对Event解析的分歧  
163、关注各种引擎对Dom解析的分歧  
164、关注各种引擎对CSS渲染的分歧 
 
 第九章 javascript编程规范和应用
165、不要混淆javascript与浏览器
166、掌握js预编译过程
167、准确分析js执行顺序
168、避免二次评估
169、建议使用直接量
170、不要让javascript引擎重复工作
171、使用位操作符执行逻辑运算
172、推荐使用原生方法
173、编写无阻碍js脚本
174、使脚本延迟执行
175、使用XHR脚本注入
176、推荐最优化非阻塞方案
177、避免深陷作用域访问
178、推荐js性能调优
179、减少Dom操作中的repaint和reflow
180、提高Dom访问效率
181、使用setTimeout实现工作线程
182、使用Web Worker
183、避免内存泄露
184、使用svg创建动态图形
185、减少对象成员访问
186、推荐100ms用户体验
187、使用接口解决js文件冲突
188、避免js与css冲突





